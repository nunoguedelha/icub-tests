// -*- mode:C++ { } tab-width:4 { } c-basic-offset:4 { } indent-tabs-mode:nil -*-

/*
 * Copyright (C) 2016 iCub Facility
 * Authors: Nuno GUedelha
 * CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT
 *
 */

#ifndef _IDATALOADER_H_
#define _IDATALOADER_H_

#include <string>
#include <vector>
#include <array>

namespace yarp {
    namespace os {
        class Property;
        class Bottle;
    }
    namespace sig {
        class Vector;
    }
}

/**
 * \ingroup icub-tests
 * This class is not a YarpTestCase. It creates the access to the sensor data medium: the YARP port 
 * or the dump file generated by the data dumper. It also handle the destruction of associated objects 
 * or the closure of opened files.
 *
 */

class IDataLoader {
public:
    /**
     * Destructor
     *
     */
    virtual ~IDataLoader() = 0;

    /**
     * creates the access to the sensor data medium: the YARP port
     * or the dump file generated by the data dumper.
     */
    virtual bool setup(yarp::os::Property& configuration, std::string &errorMsg) = 0;

    /**
     * It also handles the destruction of associated objects
     * or the closure of opened files.
     */
    virtual void tearDown() = 0;

    /**
     * Reads one line of the dump file or one vector from the YARP port.
     *
     */
    virtual yarp::sig::Vector* read() = 0;

    /**
     * Runs a delay between two consecutive data readouts
     */
    virtual void delayBeforeRead() = 0;
};
#endif //_IDATALOADER_H_


